CREATE TABLE SPECIES (
  SPECIE_ID NUMBER(*, 0) PRIMARY KEY,
  SPECIE_NAME VARCHAR2(255),
  SPECIE_DESCRIPTION VARCHAR2(255),
  PRICE_PER_KG NUMBER(*, 2),
  AVERAGE_LIFESPAN NUMBER(*, 0),
  POPULATION_STATUS NUMBER(*, 0),
  DIET VARCHAR2(255),
  MAIN_PREDATOR VARCHAR2(255)
);

CREATE TABLE HUNTERS (
  HUNTER_ID NUMBER(*, 0) PRIMARY KEY,
  NAME VARCHAR2(255),
  SURNAME VARCHAR2(255),
  WEIGHT NUMBER(*, 0),
  HEIGHT NUMBER(*, 0),
  AGE NUMBER(*, 0),
  GENDER VARCHAR2(255),
  ADDRESS VARCHAR2(255),
  EMAIL_ADRESS VARCHAR2(255),
  HOME_PHONE_NUMBER VARCHAR2(255),
  CELL_MOBILE_PHONE_NUMBER VARCHAR2(255),
  EXPERIENCE_YEARS NUMBER(*, 0)
);

CREATE TABLE EQUIPMENTS (
  EQUIPMENT_ID NUMBER(*, 0) PRIMARY KEY,
  HUNTER_ID NUMBER(*, 0),
  EQUIPMENT_TYPE VARCHAR2(255),
  EQUIPMENT_NAME VARCHAR2(255),
  CONDITION NUMBER(*, 0),
  RISK_LEVEL NUMBER(*, 0),
  FOREIGN KEY (HUNTER_ID) REFERENCES HUNTERS(HUNTER_ID)
);

CREATE TABLE LOCATIONS ( 
  LOCATION_ID NUMBER(*, 0) PRIMARY KEY,
  LOCATION_NAME VARCHAR2(255),
  LOCATION_DESCRIPTION VARCHAR2(255),
  CLIMATE VARCHAR2(255),
  MAX_TEMPERATURE NUMBER(*, 2),
  MIN_TEMPERATURE NUMBER(*, 2),
  RAINY_DAYS NUMBER(*, 0),
  ALTITUDE NUMBER(*, 0),
  TERRAIN_TYPE VARCHAR2(255),
  NEAREST_TOWN VARCHAR2(255)
);

CREATE TABLE HUNTS (
  HUNT_ID NUMBER(*, 0) PRIMARY KEY,
  LOCATION_ID NUMBER(*, 0),
  HUNT_NAME VARCHAR2(255),
  HUNTING_SEASON VARCHAR2(255),
  ORGANIZER VARCHAR2(255),
  RULES VARCHAR2(255),
  DURATION_HOURS NUMBER(*, 0),
  PARTICIPATION_FEE NUMBER(*,2),
  FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID)
);

CREATE TABLE CATCHES (
  CATCH_ID NUMBER(*, 0) PRIMARY KEY,
  HUNT_ID NUMBER(*, 0),
  HUNTER_ID NUMBER(*, 0),
  CATCH_DATE DATE,
  FOREIGN KEY (HUNT_ID) REFERENCES HUNTS(HUNT_ID),
  FOREIGN KEY (HUNTER_ID) REFERENCES HUNTERS(HUNTER_ID)
);

CREATE TABLE ANIMALS (
  ANIMAL_ID NUMBER(*, 0) PRIMARY KEY,
  CATCH_ID NUMBER(*, 0),
  SPECIE_ID NUMBER(*, 0),
  HEALTH_STATUS NUMBER(*, 2),
  AGE NUMBER(*, 0),
  GENDER VARCHAR2(255),
  COLOR VARCHAR2(255),
  WEIGHT_KG NUMBER(*,2),
  FOREIGN KEY (CATCH_ID) REFERENCES CATCHES(CATCH_ID),
  FOREIGN KEY (SPECIE_ID) REFERENCES SPECIES(SPECIE_ID)
);